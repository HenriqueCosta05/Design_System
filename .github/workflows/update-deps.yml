name: Automate Dependency Updates
run-name: Checking for outdated dependencies
on: 
  pull_request:
    branches:
      - main

jobs:
  check-if-needs-maintenance:
    name: Check if the project needs maintenance before updating dependencies
    runs-on: ubuntu-latest

    steps: 
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'
          cache: 'yarn'
      
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Check if the project needs maintenance
        run: |
          if ! yarn build-storybook; then
            echo "Project needs maintenance. Storybook failed to run."
            exit 1
          else
            echo "Storybook ran successfully. Proceeding with dependency updates."
          fi

  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    needs: check-if-needs-maintenance

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Update dependencies
        run: yarn upgrade

      - name: Commit and push changes
        run: |
          git config --global user.name "${{ secrets.GIT_USERNAME }}"
          git config --global user.email "${{ secrets.GIT_EMAIL }}"
          git add package.json yarn.lock
          git commit -m 'chore: update dependencies'
          git push origin development